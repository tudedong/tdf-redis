<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.tdf.redis">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--spring配置文件，主要配置和业务逻辑有关的-->
    <!--数据源、与mybats的整合、事务控制-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <bean id="pooledDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"></property>
        <!--数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass-->
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <!--配置初始化大小-->
        <!--通常来说，只要配置 initialSize、minIdle、maxActive -->
        <property name="initialSize" value="2"></property>
        <property name="minIdle" value="2"></property>
        <property name="maxActive" value="30"></property>

        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="5000"></property>
        <!--配置一个连接在池中最小的生存时间，单位毫秒-->
        <property name="minEvictableIdleTimeMillis" value="30000"></property>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>
        <!--解密密码必须要配置的项-->
        <!--<property name="filters" value="config"></property>
        <property name="connectionProperties" value="config.decrypt=true"></property>-->
    </bean>

    <!--配置和mybatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"/>
        <!--指定mybatis的mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--整合redis开始-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="30"></property>
        <property name="minIdle" value="15"></property>
        <property name="maxIdle" value="5"></property>
    </bean>-->

    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
        <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
        <constructor-arg name="port" value="6379"></constructor-arg>
    </bean>-->
    <!--整合redis结束-->

    <!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有dao接口的实现，加入到ioc容器中-->
        <property name="basePackage" value="com.tdf.redis.dao"/>
    </bean>

    <!--事务控制的配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>

    <!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都使用配置式）-->
    <aop:config>
        <!--切入点表达式,指定service包下所有的方法（包括子包的方法）都进行事务控制-->
        <aop:pointcut id="txPoint" expression="execution(* com.tdf.redis.service..*(..))"/>
        <!--配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <!--配置事务增强，即配置事务如何切入，如果事务控制的名称不是transactionManager，需要加上transaction-manager="transactionManagerxxx"-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--所有方法都是事务方法-->
            <tx:method name="*"/>
            <!--以get开头的所有方法-->
            <tx:method name="get*"/>
        </tx:attributes>
    </tx:advice>

</beans>